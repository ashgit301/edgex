apiVersion: v1
kind: Pod
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.network/edgex-network: "true"
    io.kompose.service: kong
  name: kong
spec:
  containers:
    - args:
        - /bin/sh
        - -c
        - until /consul/scripts/consul-svc-healthy.sh kong-migrations; do sleep 1; done; /docker-entrypoint.sh kong docker-start
      env:
        - name: KONG_ADMIN_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_ADMIN_ERROR_LOG
          value: /dev/stderr
        - name: KONG_ADMIN_LISTEN
          value: 0.0.0.0:8001, 0.0.0.0:8444 ssl
        - name: KONG_DATABASE
          value: postgres
        - name: KONG_PG_HOST
          value: kong-db
        - name: KONG_PG_PASSWORD
          value: kong
        - name: KONG_PROXY_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_PROXY_ERROR_LOG
          value: /dev/stderr
      image: kong:2.0.5
      name: kong
      ports:
        - containerPort: 8000
        - containerPort: 8001
        - containerPort: 8443
        - containerPort: 8444
      resources: {}
      tty: true
      volumeMounts:
        - mountPath: /consul/scripts
          name: consul-scripts
          readOnly: true
        - mountPath: /usr/local/kong
          name: kong
        - mountPath: /run
          name: kong-tmpfs0
        - mountPath: /tmp
          name: kong-tmpfs1
  hostname: kong
  restartPolicy: OnFailure
  volumes:
    - name: consul-scripts
      persistentVolumeClaim:
        claimName: consul-scripts
        readOnly: true
    - name: kong
      persistentVolumeClaim:
        claimName: kong
    - emptyDir:
        medium: Memory
      name: kong-tmpfs0
    - emptyDir:
        medium: Memory
      name: kong-tmpfs1
status: {}
