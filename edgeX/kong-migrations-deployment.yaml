apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: kong-migrations
  name: kong-migrations
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kong-migrations
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.network/edgex-network: "true"
        io.kompose.service: kong-migrations
    spec:
      containers:
        - args:
            - /bin/sh
            - -cx
            - |-
              until /consul/scripts/consul-svc-healthy.sh kong-db;
                 do sleep 1;
              done && kong migrations bootstrap; kong migrations list; code=$?; if [ $code -eq 5 ]; then
                kong migrations up && kong migrations finish;
              fi
          env:
            - name: KONG_DATABASE
              value: postgres
            - name: KONG_PG_HOST
              value: kong-db
            - name: KONG_PG_PASSWORD
              value: kong
          image: kong:2.0.5
          name: kong-migrations
          resources: {}
          volumeMounts:
            - mountPath: /consul/scripts
              name: consul-scripts
              readOnly: true
            - mountPath: /tmp
              name: kong-migrations-tmpfs0
      restartPolicy: Always
      volumes:
        - name: consul-scripts
          persistentVolumeClaim:
            claimName: consul-scripts
            readOnly: true
        - emptyDir:
            medium: Memory
          name: kong-migrations-tmpfs0
status: {}
